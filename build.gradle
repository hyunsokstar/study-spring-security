plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example.security'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// BOM ÏÑ§Ï†ï
dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:1.0.0"
	}
}

dependencies {
	// üëá ÏÉàÎ°úÏö¥ Ïä§ÌÉÄÌÑ∞ Ïù¥Î¶Ñ!
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'me.paulschwarz:spring-dotenv:2.5.4'

	// JWT Í¥ÄÎ†® ÏùòÏ°¥ÏÑ±
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// üëá Ïó¨Í∏∞ÏÑúÎ∂ÄÌÑ∞ Swagger(OpenAPI) ÏÑ§Ï†ï
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

tasks.named('test') {
	useJUnitPlatform()
}